{"version":3,"sources":["BangwaCalendar.js","App.js","reportWebVitals.js","index.js"],"names":["BangwaCalendar","currentDate","setCurrentDate","useState","Date","inputDay","setInputDay","inputMonth","setInputMonth","inputYear","setInputYear","convertedDate","setConvertedDate","isDesktop","setIsDesktop","window","innerWidth","gridRef","useRef","startOfCycle","getTime","bangwaDays","englishDays","useEffect","handleResize","addEventListener","removeEventListener","getBangwaDay","date","currentTimestamp","index","Math","floor","getEnglishDay","getDay","changeMonth","increment","prevDate","newDate","setMonth","getMonth","calendarDays","generateCalendarDays","year","getFullYear","month","daysInMonth","getDaysInMonth","getDate","firstDayOfMonth","UTC","days","startDate","setDate","push","day","englishDay","isCurrentMonth","length","nextMonthDate","containerStyle","width","maxWidth","margin","padding","fontSize","backgroundColor","borderRadius","boxShadow","buttonStyle","background","border","cursor","color","cellStyle","aspectRatio","textAlign","display","flexDirection","justifyContent","alignItems","overflow","transition","headerCellStyle","_objectSpread","fontWeight","position","diagonalTextStyle","top","left","transform","whiteSpace","textShadow","inputContainerStyle","gap","inputStyle","_jsxs","style","children","marginBottom","_jsx","onClick","ChevronLeft","size","ChevronRight","ref","gridTemplateColumns","map","_Fragment","onSubmit","e","preventDefault","parseInt","isNaN","bangwaDay","formattedDate","toLocaleDateString","weekday","concat","type","value","onChange","target","placeholder","min","max","marginTop","App","className","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32290a5b.chunk.js","sourcesContent":["\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\r\n\r\nexport const BangwaCalendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [inputDay, setInputDay] = useState('');\r\n  const [inputMonth, setInputMonth] = useState('');\r\n  const [inputYear, setInputYear] = useState('');\r\n  const [convertedDate, setConvertedDate] = useState('');\r\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth >= 768);\r\n  const gridRef = useRef(null);\r\n  \r\n  const startOfCycle = new Date('1970-05-24T00:00:00Z').getTime() / 1000;\r\n  const bangwaDays = ['Ankoah', 'Anzoah', 'Alena', 'Amina', 'Afeah', 'Agong', 'Aseih', 'Alung'];\r\n  const englishDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsDesktop(window.innerWidth >= 768);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const getBangwaDay = (date) => {\r\n    const currentTimestamp = date.getTime() / 1000;\r\n    const daysSinceCycleStart = Math.floor((currentTimestamp - startOfCycle) / 86400);\r\n    const index = daysSinceCycleStart % 8;\r\n    return bangwaDays[index < 0 ? index + 8 : index];\r\n  };\r\n\r\n  const getEnglishDay = (date) => {\r\n    return englishDays[date.getDay()];\r\n  };\r\n\r\n  const getDaysInMonth = (year, month) => {\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n\r\n  const generateCalendarDays = () => {\r\n    const year = currentDate.getFullYear();\r\n    const month = currentDate.getMonth();\r\n    const daysInMonth = getDaysInMonth(year, month);\r\n    const firstDayOfMonth = new Date(Date.UTC(year, month, 1));\r\n    const days = [];\r\n\r\n    let startDate = new Date(firstDayOfMonth);\r\n    while (getBangwaDay(startDate) !== 'Ankoah') {\r\n      startDate.setDate(startDate.getDate() - 1);\r\n    }\r\n\r\n    while (startDate < firstDayOfMonth) {\r\n      days.push({ day: null, englishDay: getEnglishDay(startDate), isCurrentMonth: false });\r\n      startDate.setDate(startDate.getDate() + 1);\r\n    }\r\n\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      const date = new Date(Date.UTC(year, month, day));\r\n      days.push({ day, englishDay: getEnglishDay(date), isCurrentMonth: true });\r\n    }\r\n\r\n    while (days.length % 8 !== 0) {\r\n      const nextMonthDate = new Date(Date.UTC(year, month + 1, days.length - daysInMonth + 1));\r\n      days.push({ day: null, englishDay: getEnglishDay(nextMonthDate), isCurrentMonth: false });\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  const changeMonth = (increment) => {\r\n    setCurrentDate(prevDate => {\r\n      const newDate = new Date(prevDate);\r\n      newDate.setMonth(prevDate.getMonth() + increment);\r\n      return newDate;\r\n    });\r\n  };\r\n\r\n  const handleDateConversion = (e) => {\r\n    e.preventDefault();\r\n    const day = parseInt(inputDay, 10);\r\n    const month = parseInt(inputMonth, 10);\r\n    const year = parseInt(inputYear, 10);\r\n\r\n    if (isNaN(day) || isNaN(month) || isNaN(year)) {\r\n      setConvertedDate('Please enter valid numbers for day, month, and year.');\r\n      return;\r\n    }\r\n\r\n    const date = new Date(Date.UTC(year, month - 1, day));\r\n    if (isNaN(date.getTime())) {\r\n      setConvertedDate('Invalid date. Please check your input.');\r\n      return;\r\n    }\r\n\r\n    const bangwaDay = getBangwaDay(date);\r\n    const formattedDate = date.toLocaleDateString('en-US', { weekday: 'short', day: 'numeric', month: 'short', year: 'numeric' });\r\n    setConvertedDate(`${formattedDate} is ${bangwaDay} in Nweh`);\r\n  };\r\n\r\n  const calendarDays = generateCalendarDays();\r\n\r\n  const containerStyle = {\r\n    width: isDesktop ? '600px' : '100%',\r\n    maxWidth: '600px',\r\n    margin: '0 auto',\r\n    padding: '16px',\r\n    fontSize: isDesktop ? '14px' : '12px',\r\n    backgroundColor: '#f0f4f8',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\r\n  };\r\n\r\n  const headerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '16px',\r\n    padding: '8px',\r\n    backgroundColor: '#2c3e50',\r\n    color: '#ecf0f1',\r\n    borderRadius: '4px',\r\n  };\r\n\r\n  const buttonStyle = {\r\n    padding: '8px',\r\n    background: 'none',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    color: '#ecf0f1',\r\n  };\r\n\r\n  const titleStyle = {\r\n    fontSize: '1.25rem',\r\n    fontWeight: 'bold',\r\n  };\r\n\r\n  const gridStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(8, 1fr)',\r\n    gap: '2px',\r\n    marginBottom: '16px',\r\n    backgroundColor: '#ecf0f1',\r\n    padding: '8px',\r\n    borderRadius: '4px',\r\n  };\r\n\r\n  const cellStyle = {\r\n    aspectRatio: '1',\r\n    textAlign: 'center',\r\n    padding: '2px',\r\n    border: '1px solid #bdc3c7',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n    borderRadius: '4px',\r\n    transition: 'background-color 0.3s ease',\r\n  };\r\n\r\n  const headerCellStyle = {\r\n    ...cellStyle,\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#34495e',\r\n    color: '#ecf0f1',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n  };\r\n\r\n  const diagonalTextStyle = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%) rotate(-45deg)',\r\n    whiteSpace: 'nowrap',\r\n    fontSize: isDesktop ? '0.9em' : '0.9em',\r\n    fontWeight: 'bold',\r\n    color: '#ecf0f1',\r\n    textShadow: '1px 1px 2px rgba(0,0,0,0.5)',\r\n    width: '140%',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  const formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '8px',\r\n    backgroundColor: '#ecf0f1',\r\n    padding: '16px',\r\n    borderRadius: '4px',\r\n  };\r\n\r\n  const inputContainerStyle = {\r\n    display: 'flex',\r\n    flexDirection: isDesktop ? 'row' : 'column',\r\n    gap: '8px',\r\n  };\r\n\r\n  const inputStyle = {\r\n    padding: '8px',\r\n    border: '1px solid #bdc3c7',\r\n    borderRadius: '4px',\r\n    width: '100%',\r\n    backgroundColor: '#fff',\r\n  };\r\n\r\n  const submitButtonStyle = {\r\n    padding: '8px',\r\n    backgroundColor: '#3498db',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={headerStyle}>\r\n        <button onClick={() => changeMonth(-1)} style={buttonStyle}>\r\n          <ChevronLeft size={16} />\r\n        </button>\r\n        <h2 style={titleStyle}>\r\n          {monthNames[currentDate.getMonth()]} {currentDate.getFullYear()}\r\n        </h2>\r\n        <button onClick={() => changeMonth(1)} style={buttonStyle}>\r\n          <ChevronRight size={16} />\r\n        </button>\r\n      </div>\r\n      <div ref={gridRef} style={gridStyle}>\r\n        {bangwaDays.map(day => (\r\n          <div key={day} style={headerCellStyle}>\r\n            {isDesktop ? (\r\n              day\r\n            ) : (\r\n              <span style={diagonalTextStyle}>{day}</span>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {calendarDays.map((day, index) => (\r\n          <div key={index} style={{\r\n            ...cellStyle, \r\n            backgroundColor: day.isCurrentMonth ? '#fff' : '#f5f5f5',\r\n            color: day.isCurrentMonth ? '#333' : '#999',\r\n          }}>\r\n            {day.day && (\r\n              <>\r\n                <div style={{fontSize: '1em', fontWeight: 'bold'}}>{day.day}</div>\r\n                <div style={{fontSize: '0.7em', color: '#666'}}>{day.englishDay}</div>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <form onSubmit={handleDateConversion} style={formStyle}>\r\n          <label style={{fontWeight: 'bold', color: '#2c3e50'}}>Conver a date to Nweh:</label>\r\n          <div style={inputContainerStyle}>\r\n            <input\r\n              type=\"number\"\r\n              value={inputDay}\r\n              onChange={(e) => setInputDay(e.target.value)}\r\n              placeholder=\"Day\"\r\n              style={inputStyle}\r\n              min=\"1\"\r\n              max=\"31\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={inputMonth}\r\n              onChange={(e) => setInputMonth(e.target.value)}\r\n              placeholder=\"Month\"\r\n              style={inputStyle}\r\n              min=\"1\"\r\n              max=\"12\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={inputYear}\r\n              onChange={(e) => setInputYear(e.target.value)}\r\n              placeholder=\"Year\"\r\n              style={inputStyle}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" style={submitButtonStyle}>Convert</button>\r\n        </form>\r\n        {convertedDate && (\r\n          <div style={{marginTop: '8px', fontWeight: 'bold', color: '#2c3e50'}}>{convertedDate}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport './App.css'; // Import the App.css file\r\nimport { BangwaCalendar } from './BangwaCalendar';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Nweh Calendar</h1>\r\n      <BangwaCalendar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom'; // Update this line\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}